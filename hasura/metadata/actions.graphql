type Mutation {
  complete_order(
    data: CompleteOrderInput!
  ): CompleteOrderOutput!
}

type Mutation {
  create_product(
    product: CreateProductInput
  ): CreateProductOutput
}

type Mutation {
  invite_user(
    data: InviteUserInput
  ): InviteUserOutput
}

enum RolesEnum {
  admin
  manager
  user
  readonly_user
}

input InviteUserInput {
  email: String!
  first_name: String!
  last_name: String!
  role: RolesEnum!
}

input CreateProductInput {
  name: String!
  description: String!
  initial_count: Int!
  image_base64: String
  category_id: uuid!
}

input ImageCreationParams {
  image_base64: String!
  image_extension: String!
}

input CompleteOrderInput {
  id: uuid!
}

type InviteUserOutput {
  error: String
  id: String
}

type InviteUserResponse {
  id: String!
}

type Error {
  error: String!
}

type CreateProductOutput {
  id: uuid!
}

type CompleteOrderOutput {
  id: uuid!
}

